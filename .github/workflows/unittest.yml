name: UnitTest

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - release/*

jobs:
  unittest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3', '8.4']
    
    steps:
    - name: Checkout latest changes
      uses: actions/checkout@v4
      
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, curl, fileinfo, openssl
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
        
    - name: Run core tests
      run: |
        ./vendor/bin/phpunit
      id: tests
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

    - name: Notify Slack - Results
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        custom_payload: |
          {
            "text": "${{ steps.tests.outcome == 'success' && '‚úÖ „ÉÜ„Çπ„ÉàÊàêÂäü' || 'üõë „Ç®„É©„ÉºÁô∫Áîü' }}",
            "attachments": [{
              "color": "${{ steps.tests.outcome == 'success' && 'good' || 'warning' }}",
              "fields": [{
                "title": "Issue/PR",
                "value": "${{ github.event.issue.title || github.event.pull_request.title || 'Manual run' }}",
                "short": true
              }, {
                "title": "Commit",
                "value": "${{ github.sha }}",
                "short": true
              }, {
                "title": "PHP Version",
                "value": "${{ matrix.php-version }}",
                "short": true
              }]
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
